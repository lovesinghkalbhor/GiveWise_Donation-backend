generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "debian-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  adhar_card     String          @unique
  mobile         String          @unique
  email          String?
  password       String
  refreshToken   String?
  created_at     DateTime        @default(now())
  // Relationship with Donation
  donations      Donation[] @relation("AuthorizedPerson")
  donationsUpdated      Donation[] @relation("UpdatedPerson")

  donationsKinds DonationKinds[]  @relation("AuthorizedPerson")
  donationsKindsUpdate DonationKinds[] @relation("UpdatedPerson")
}

model Donation {
  id                   Int      @id @default(autoincrement())
  receiptNo            String
  
  date                 DateTime @default(now())
  createdAt DateTime?  
  updatedAt DateTime?  @updatedAt

  authorizedPerson User  @relation("AuthorizedPerson",fields: [authorizedPersonId], references: [id])
  authorizedPersonName String
  authorizedPersonId   Int

  updatedByPerson User?  @relation("UpdatedPerson",fields: [updatedByPersonId], references: [id])
  updatedByPersonId Int? 
  updatedByPersonName String?  

  donorName   String
  aadhar      String?
  pan         String?
  phoneNumber String
  address     String
  countryCode String  @default("+91")

  amount Int? // Amount donated (if it's a monetary donation)

  paymentMethod    String @default("Unknown") // Provide a default value
  donationCategory String @default("OTHER") // Provide a default value
  purpose          String
  websiteDetails   String @default("anubhuti.com")
}

model DonationKinds {
  id                   Int      @id @default(autoincrement())
  receiptNo            String   @unique
  date                 DateTime @default(now())
  
  createdAt DateTime?  
  updatedAt DateTime?  @updatedAt

  authorizedPerson     User     @relation("AuthorizedPerson",fields: [authorizedPersonId], references: [id])
  authorizedPersonName String
  authorizedPersonId   Int

  updatedByPerson User?  @relation("UpdatedPerson",fields: [updatedByPersonId], references: [id])
  updatedByPersonId  Int?  
  updatedByPersonName String?

  donorName   String
  aadhar      String?
  pan         String?
  phoneNumber String
  address String
  countryCode String  @default("+91")


  items Item[] // Array of items donated (if it's an item donation)
  donationCategory String @default("OTHER") // Provide a default value
  purpose          String
  websiteDetails   String @default("anubhuti.com")
}

model Item {
  id            Int           @id @default(autoincrement())
  name          String // Name of the donated item
  quantity      String // Quantity of the donated item
  approxAmount  Int           @default(0) // Provide a default value
  donationKinds DonationKinds @relation(fields: [donationId], references: [id])
  donationId    Int // Foreign key to link with Donation model
}
